# Chemins
$pathFr = "docs/fr/api"
$pathEn = "docs/en/api"
$openapiFile = "openapi.yaml"
$outputFr = "$pathFr/restokit-api.html"
$outputEn = "$pathEn/restokit-api.html"

# Fonction pour g√©n√©rer la doc
function Generate-RedocFr {
    Write-Host "`n[G√©n√©ration FR] Documentation Redoc..."
    npx @redocly/cli build-docs "$pathFr/$openapiFile" -o "$outputFr" --title "API RestoKit (FR)" --disableGoogleFont
    Write-Host "‚úÖ Documentation FR g√©n√©r√©e dans $outputFr"
}

function Generate-RedocEn {
    Write-Host "`n[G√©n√©ration EN] Documentation Redoc..."
    npx @redocly/cli build-docs "$pathEn/$openapiFile" -o "$outputEn" --title "RestoKit API (EN)" --disableGoogleFont
    Write-Host "‚úÖ Documentation EN g√©n√©r√©e dans $outputEn"
}

# G√©n√©ration initiale
Generate-RedocFr
Generate-RedocEn

# Cr√©ation des watchers
$fswFr = New-Object System.IO.FileSystemWatcher $pathFr, $openapiFile
$fswFr.EnableRaisingEvents = $true
$fswFr.NotifyFilter = [System.IO.NotifyFilters]'LastWrite'

$fswEn = New-Object System.IO.FileSystemWatcher $pathEn, $openapiFile
$fswEn.EnableRaisingEvents = $true
$fswEn.NotifyFilter = [System.IO.NotifyFilters]'LastWrite'

# √âv√©nements
Register-ObjectEvent $fswFr Changed -Action {
    Write-Host "`n[Watcher FR] Changement d√©tect√©, r√©g√©n√©ration..."
    Generate-RedocFr
}

Register-ObjectEvent $fswEn Changed -Action {
    Write-Host "`n[Watcher EN] Changement d√©tect√©, r√©g√©n√©ration..."
    Generate-RedocEn
}

Write-Host "`nüëÄ Watchers actifs sur les fichiers FR et EN. Appuyez sur Ctrl+C pour arr√™ter."
while ($true) { Start-Sleep -Seconds 1 }
